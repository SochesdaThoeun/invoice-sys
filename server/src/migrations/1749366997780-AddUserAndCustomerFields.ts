import { MigrationInterface, QueryRunner } from "typeorm";

export class AddUserAndCustomerFields1749366997780 implements MigrationInterface {
    name = 'AddUserAndCustomerFields1749366997780'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "tax_codes" DROP CONSTRAINT "FK_tax_codes_seller"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "products_sellerId_fkey"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_products_tax_code"`);
        await queryRunner.query(`ALTER TABLE "business_addresses" DROP CONSTRAINT "FK_business_addresses_seller"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_customers_seller"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_customers_business_address"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_invoices_seller"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_invoices_customer"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_invoices_order"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_orders_seller"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_orders_customer"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_orders_payment_type"`);
        await queryRunner.query(`ALTER TABLE "quotes" DROP CONSTRAINT "FK_quotes_seller"`);
        await queryRunner.query(`ALTER TABLE "quotes" DROP CONSTRAINT "FK_quotes_customer"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP CONSTRAINT "FK_categories_seller"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP CONSTRAINT "FK_categories_parent"`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" DROP CONSTRAINT "FK_ledger_entries_seller"`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" DROP CONSTRAINT "FK_ledger_entries_category"`);
        await queryRunner.query(`ALTER TABLE "ai_requests" DROP CONSTRAINT "FK_ai_requests_seller"`);
        await queryRunner.query(`ALTER TABLE "order_carts" DROP CONSTRAINT "FK_order_carts_order"`);
        await queryRunner.query(`ALTER TABLE "order_carts" DROP CONSTRAINT "FK_order_carts_product"`);
        await queryRunner.query(`ALTER TABLE "order_carts" DROP CONSTRAINT "FK_order_carts_seller"`);
        await queryRunner.query(`ALTER TABLE "order_carts" DROP CONSTRAINT "FK_order_carts_tax_code"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_products_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_products_sku"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_business_addresses_businessId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_business_addresses_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_customers_businessAddressId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_customers_email"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_customers_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_orderId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_customerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_payment_types_name"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_orders_paymentTypeId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_orders_customerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_orders_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_quotes_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_quotes_customerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_quotes_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_categories_parentId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_categories_type"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_categories_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ledger_entries_transactionGroupId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ledger_entries_sourceId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ledger_entries_sourceType"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ledger_entries_categoryId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ledger_entries_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ai_requests_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_order_carts_taxCodeId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_order_carts_sellerId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_order_carts_productId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_order_carts_orderId"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP COLUMN "address"`);
        
        // Add name column as nullable first, then update existing users and make it NOT NULL
        await queryRunner.query(`ALTER TABLE "users" ADD "name" character varying`);
        await queryRunner.query(`UPDATE "users" SET "name" = SPLIT_PART("email", '@', 1) WHERE "name" IS NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "name" SET NOT NULL`);
        
        await queryRunner.query(`ALTER TABLE "users" ADD "phone" character varying`);
        await queryRunner.query(`ALTER TABLE "users" ADD "businessRegistrationNumber" character varying`);
        await queryRunner.query(`ALTER TABLE "users" ADD "businessName" character varying`);
        await queryRunner.query(`ALTER TABLE "customers" ADD "businessRegistrationNumber" character varying`);
        await queryRunner.query(`ALTER TABLE "customers" ADD "businessName" character varying`);
        await queryRunner.query(`ALTER TYPE "public"."user_role_enum" RENAME TO "user_role_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('ADMIN', 'SELLER')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."users_role_enum" USING "role"::"text"::"public"."users_role_enum"`);
        await queryRunner.query(`DROP TYPE "public"."user_role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "UQ_f14e74f65b1153d6e3ae73b85bc" UNIQUE ("businessAddressId")`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "UQ_a58a78a0e0031dd93a2f56f1e8e" UNIQUE ("orderId")`);
        await queryRunner.query(`ALTER TYPE "public"."invoice_status_enum" RENAME TO "invoice_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."invoices_status_enum" AS ENUM('DRAFT', 'ISSUED', 'PAID')`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "status" TYPE "public"."invoices_status_enum" USING "status"::"text"::"public"."invoices_status_enum"`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."invoice_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "quotes" ADD CONSTRAINT "UQ_018021172de081ff140571a9730" UNIQUE ("orderId")`);
        await queryRunner.query(`ALTER TYPE "public"."quote_status_enum" RENAME TO "quote_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."quotes_status_enum" AS ENUM('DRAFT', 'SENT', 'ACCEPTED', 'REJECTED', 'EXPIRED')`);
        await queryRunner.query(`ALTER TABLE "quotes" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "quotes" ALTER COLUMN "status" TYPE "public"."quotes_status_enum" USING "status"::"text"::"public"."quotes_status_enum"`);
        await queryRunner.query(`ALTER TABLE "quotes" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."quote_status_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."category_type_enum" RENAME TO "category_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."categories_type_enum" AS ENUM('INCOME', 'EXPENSE', 'ASSET', 'LIABILITY')`);
        await queryRunner.query(`ALTER TABLE "categories" ALTER COLUMN "type" TYPE "public"."categories_type_enum" USING "type"::"text"::"public"."categories_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."category_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."source_type_enum" RENAME TO "source_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."ledger_entries_sourcetype_enum" AS ENUM('INVOICE', 'ORDER', 'QUOTE', 'PAYMENT', 'ADJUSTMENT', 'EXPENSE')`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ALTER COLUMN "sourceType" TYPE "public"."ledger_entries_sourcetype_enum" USING "sourceType"::"text"::"public"."ledger_entries_sourcetype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."source_type_enum_old"`);
        // Handle sourceId column change from UUID to VARCHAR
        await queryRunner.query(`ALTER TABLE "ledger_entries" DROP COLUMN "sourceId"`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ADD "sourceId" character varying`);
        await queryRunner.query(`UPDATE "ledger_entries" SET "sourceId" = 'migrated-' || gen_random_uuid()::text WHERE "sourceId" IS NULL`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ALTER COLUMN "sourceId" SET NOT NULL`);
        
        // Handle transactionGroupId column change from UUID to VARCHAR
        await queryRunner.query(`ALTER TABLE "ledger_entries" DROP COLUMN "transactionGroupId"`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ADD "transactionGroupId" character varying`);
        await queryRunner.query(`UPDATE "ledger_entries" SET "transactionGroupId" = 'migrated-' || gen_random_uuid()::text WHERE "transactionGroupId" IS NULL`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ALTER COLUMN "transactionGroupId" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "tax_codes" ADD CONSTRAINT "FK_36e5e2d5fe0a43c4f9f37d9a307" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_e40a1dd2909378f0da1f34f7bd6" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_ddb2a21c6af2b27c4fb10191354" FOREIGN KEY ("taxCodeId") REFERENCES "tax_codes"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "business_addresses" ADD CONSTRAINT "FK_142b994f55f12e5a8cfe5aae435" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_253e5a862ee0044a647ec96dc83" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_f14e74f65b1153d6e3ae73b85bc" FOREIGN KEY ("businessAddressId") REFERENCES "business_addresses"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_0b7320e7be48e88e0f408e535d9" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_1df049f8943c6be0c1115541efb" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_a58a78a0e0031dd93a2f56f1e8e" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_1c382880db667beb75d26c57873" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_e5de51ca888d8b1f5ac25799dd1" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_014a90e0bba55ec93544e80acbb" FOREIGN KEY ("paymentTypeId") REFERENCES "payment_types"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "quotes" ADD CONSTRAINT "FK_15b49b3cbd6a882e44ec1081e46" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "quotes" ADD CONSTRAINT "FK_ccf1feb9e280240bb05dc0aed2a" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "quotes" ADD CONSTRAINT "FK_018021172de081ff140571a9730" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "categories" ADD CONSTRAINT "FK_569a2038a6d74cb0089b7e59f33" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "categories" ADD CONSTRAINT "FK_9a6f051e66982b5f0318981bcaa" FOREIGN KEY ("parentId") REFERENCES "categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ADD CONSTRAINT "FK_64fdebae658899fbae2efb0a223" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ADD CONSTRAINT "FK_c67712b09e134a6d65c5b9ada9b" FOREIGN KEY ("categoryId") REFERENCES "categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ai_requests" ADD CONSTRAINT "FK_a5d57742c07113c64000321ea71" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_carts" ADD CONSTRAINT "FK_1fdeeb3b75672615afc5a96be6b" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_carts" ADD CONSTRAINT "FK_6b6d182d8258e394a367ec16db6" FOREIGN KEY ("productId") REFERENCES "products"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_carts" ADD CONSTRAINT "FK_b9295957134ed1e44513b27a8fc" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_carts" ADD CONSTRAINT "FK_70a81aeae75aee778a0e62cb937" FOREIGN KEY ("taxCodeId") REFERENCES "tax_codes"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "order_carts" DROP CONSTRAINT "FK_70a81aeae75aee778a0e62cb937"`);
        await queryRunner.query(`ALTER TABLE "order_carts" DROP CONSTRAINT "FK_b9295957134ed1e44513b27a8fc"`);
        await queryRunner.query(`ALTER TABLE "order_carts" DROP CONSTRAINT "FK_6b6d182d8258e394a367ec16db6"`);
        await queryRunner.query(`ALTER TABLE "order_carts" DROP CONSTRAINT "FK_1fdeeb3b75672615afc5a96be6b"`);
        await queryRunner.query(`ALTER TABLE "ai_requests" DROP CONSTRAINT "FK_a5d57742c07113c64000321ea71"`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" DROP CONSTRAINT "FK_c67712b09e134a6d65c5b9ada9b"`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" DROP CONSTRAINT "FK_64fdebae658899fbae2efb0a223"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP CONSTRAINT "FK_9a6f051e66982b5f0318981bcaa"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP CONSTRAINT "FK_569a2038a6d74cb0089b7e59f33"`);
        await queryRunner.query(`ALTER TABLE "quotes" DROP CONSTRAINT "FK_018021172de081ff140571a9730"`);
        await queryRunner.query(`ALTER TABLE "quotes" DROP CONSTRAINT "FK_ccf1feb9e280240bb05dc0aed2a"`);
        await queryRunner.query(`ALTER TABLE "quotes" DROP CONSTRAINT "FK_15b49b3cbd6a882e44ec1081e46"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_014a90e0bba55ec93544e80acbb"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_e5de51ca888d8b1f5ac25799dd1"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_1c382880db667beb75d26c57873"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_a58a78a0e0031dd93a2f56f1e8e"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_1df049f8943c6be0c1115541efb"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_0b7320e7be48e88e0f408e535d9"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_f14e74f65b1153d6e3ae73b85bc"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_253e5a862ee0044a647ec96dc83"`);
        await queryRunner.query(`ALTER TABLE "business_addresses" DROP CONSTRAINT "FK_142b994f55f12e5a8cfe5aae435"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_ddb2a21c6af2b27c4fb10191354"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_e40a1dd2909378f0da1f34f7bd6"`);
        await queryRunner.query(`ALTER TABLE "tax_codes" DROP CONSTRAINT "FK_36e5e2d5fe0a43c4f9f37d9a307"`);
        // Handle transactionGroupId column change back to UUID
        await queryRunner.query(`ALTER TABLE "ledger_entries" DROP COLUMN "transactionGroupId"`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ADD "transactionGroupId" uuid`);
        await queryRunner.query(`UPDATE "ledger_entries" SET "transactionGroupId" = gen_random_uuid() WHERE "transactionGroupId" IS NULL`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ALTER COLUMN "transactionGroupId" SET NOT NULL`);
        
        // Handle sourceId column change back to UUID
        await queryRunner.query(`ALTER TABLE "ledger_entries" DROP COLUMN "sourceId"`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ADD "sourceId" uuid`);
        await queryRunner.query(`UPDATE "ledger_entries" SET "sourceId" = gen_random_uuid() WHERE "sourceId" IS NULL`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ALTER COLUMN "sourceId" SET NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."source_type_enum_old" AS ENUM('INVOICE', 'ORDER', 'QUOTE', 'PAYMENT', 'ADJUSTMENT', 'EXPENSE')`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ALTER COLUMN "sourceType" TYPE "public"."source_type_enum_old" USING "sourceType"::"text"::"public"."source_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."ledger_entries_sourcetype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."source_type_enum_old" RENAME TO "source_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."category_type_enum_old" AS ENUM('INCOME', 'EXPENSE', 'ASSET', 'LIABILITY')`);
        await queryRunner.query(`ALTER TABLE "categories" ALTER COLUMN "type" TYPE "public"."category_type_enum_old" USING "type"::"text"::"public"."category_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."categories_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."category_type_enum_old" RENAME TO "category_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."quote_status_enum_old" AS ENUM('DRAFT', 'SENT', 'ACCEPTED', 'REJECTED', 'EXPIRED')`);
        await queryRunner.query(`ALTER TABLE "quotes" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "quotes" ALTER COLUMN "status" TYPE "public"."quote_status_enum_old" USING "status"::"text"::"public"."quote_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "quotes" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."quotes_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."quote_status_enum_old" RENAME TO "quote_status_enum"`);
        await queryRunner.query(`ALTER TABLE "quotes" DROP CONSTRAINT "UQ_018021172de081ff140571a9730"`);
        await queryRunner.query(`CREATE TYPE "public"."invoice_status_enum_old" AS ENUM('DRAFT', 'ISSUED', 'PAID')`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "status" TYPE "public"."invoice_status_enum_old" USING "status"::"text"::"public"."invoice_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "status" SET DEFAULT 'DRAFT'`);
        await queryRunner.query(`DROP TYPE "public"."invoices_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."invoice_status_enum_old" RENAME TO "invoice_status_enum"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "UQ_a58a78a0e0031dd93a2f56f1e8e"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "UQ_f14e74f65b1153d6e3ae73b85bc"`);
        await queryRunner.query(`CREATE TYPE "public"."user_role_enum_old" AS ENUM('ADMIN', 'SELLER')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."user_role_enum_old" USING "role"::"text"::"public"."user_role_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."user_role_enum_old" RENAME TO "user_role_enum"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP COLUMN "businessName"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP COLUMN "businessRegistrationNumber"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "businessName"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "businessRegistrationNumber"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "phone"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "name"`);
        await queryRunner.query(`ALTER TABLE "customers" ADD "address" text`);
        await queryRunner.query(`CREATE INDEX "IDX_order_carts_orderId" ON "order_carts" ("orderId") `);
        await queryRunner.query(`CREATE INDEX "IDX_order_carts_productId" ON "order_carts" ("productId") `);
        await queryRunner.query(`CREATE INDEX "IDX_order_carts_sellerId" ON "order_carts" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_order_carts_taxCodeId" ON "order_carts" ("taxCodeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ai_requests_sellerId" ON "ai_requests" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ledger_entries_sellerId" ON "ledger_entries" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ledger_entries_categoryId" ON "ledger_entries" ("categoryId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ledger_entries_sourceType" ON "ledger_entries" ("sourceType") `);
        await queryRunner.query(`CREATE INDEX "IDX_ledger_entries_sourceId" ON "ledger_entries" ("sourceId") `);
        await queryRunner.query(`CREATE INDEX "IDX_ledger_entries_transactionGroupId" ON "ledger_entries" ("transactionGroupId") `);
        await queryRunner.query(`CREATE INDEX "IDX_categories_sellerId" ON "categories" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_categories_type" ON "categories" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_categories_parentId" ON "categories" ("parentId") `);
        await queryRunner.query(`CREATE INDEX "IDX_quotes_sellerId" ON "quotes" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_quotes_customerId" ON "quotes" ("customerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_quotes_status" ON "quotes" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_orders_sellerId" ON "orders" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_orders_customerId" ON "orders" ("customerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_orders_paymentTypeId" ON "orders" ("paymentTypeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_payment_types_name" ON "payment_types" ("name") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_sellerId" ON "invoices" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_customerId" ON "invoices" ("customerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_orderId" ON "invoices" ("orderId") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_status" ON "invoices" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_customers_sellerId" ON "customers" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_customers_email" ON "customers" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_customers_businessAddressId" ON "customers" ("businessAddressId") `);
        await queryRunner.query(`CREATE INDEX "IDX_business_addresses_sellerId" ON "business_addresses" ("sellerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_business_addresses_businessId" ON "business_addresses" ("businessId") `);
        await queryRunner.query(`CREATE INDEX "IDX_products_sku" ON "products" ("sku") `);
        await queryRunner.query(`CREATE INDEX "IDX_products_sellerId" ON "products" ("sellerId") `);
        await queryRunner.query(`ALTER TABLE "order_carts" ADD CONSTRAINT "FK_order_carts_tax_code" FOREIGN KEY ("taxCodeId") REFERENCES "tax_codes"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_carts" ADD CONSTRAINT "FK_order_carts_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_carts" ADD CONSTRAINT "FK_order_carts_product" FOREIGN KEY ("productId") REFERENCES "products"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "order_carts" ADD CONSTRAINT "FK_order_carts_order" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ai_requests" ADD CONSTRAINT "FK_ai_requests_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ADD CONSTRAINT "FK_ledger_entries_category" FOREIGN KEY ("categoryId") REFERENCES "categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ledger_entries" ADD CONSTRAINT "FK_ledger_entries_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "categories" ADD CONSTRAINT "FK_categories_parent" FOREIGN KEY ("parentId") REFERENCES "categories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "categories" ADD CONSTRAINT "FK_categories_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "quotes" ADD CONSTRAINT "FK_quotes_customer" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "quotes" ADD CONSTRAINT "FK_quotes_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_orders_payment_type" FOREIGN KEY ("paymentTypeId") REFERENCES "payment_types"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_orders_customer" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_orders_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_invoices_order" FOREIGN KEY ("orderId") REFERENCES "orders"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_invoices_customer" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_invoices_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_customers_business_address" FOREIGN KEY ("businessAddressId") REFERENCES "business_addresses"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_customers_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "business_addresses" ADD CONSTRAINT "FK_business_addresses_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_products_tax_code" FOREIGN KEY ("taxCodeId") REFERENCES "tax_codes"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "products_sellerId_fkey" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tax_codes" ADD CONSTRAINT "FK_tax_codes_seller" FOREIGN KEY ("sellerId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

}
